I0VYVE0zVSB4LXR2Zy11cmw9IiIKCiNFWFRJTkY6LTEgdHZnLWxvZ289IiIgZ3JvdXAtdGl0bGU9IkZSRUVNSVVNIiwgQkFSS0VSCgojRVhUSU5GOi0xIHR2Zy1sb2dvPSJodHRwczovL3N0YXRpYy53aWtpYS5ub2Nvb2tpZS5uZXQvbG9nb3BlZGlhL2ltYWdlcy9mL2ZhL0EyWl9DaGFubmVsXzExXyUyODElMjkucG5nIiBncm91cC10aXRsZT0iRlJFRU1JVU0iLCBBMlogW1NEXQpodHRwczovL3FwLXBsZHQtbGl2ZS1ncnAtMDItcHJvZC5ha2FtYWl6ZWQubmV0L291dC91L3R2NS5tM3U4P2NoZWNrZWRieTpETjQtSVBUVgoKI0VYVElORjotMSB0dmctbG9nbz0iaHR0cHM6Ly91cGxvYWQud2lraW1lZGlhLm9yZy93aWtpcGVkaWEvZW4vdGh1bWIvOS85ZC9PbmVfTmV3c19Mb2dvXzIwMTguc3ZnLzc2OHB4LU9uZV9OZXdzX0xvZ29fMjAxOC5zdmcucG5nIiBncm91cC10aXRsZT0iRlJFRU1JVU0iLCBPTkUgTkVXUyBQSCBbSERdCmh0dHA6Ly90djE0cy54eXo6ODA4MC9saXZlL1g1eFJ6MC85NDQ4NzcvMTAxNzc0LnRzP2NoZWNrZWRieTpETjQtSVBUVgoKI0VYVElORjotMSB0dmctbG9nbz0iaHR0cHM6Ly91cGxvYWQud2lraW1lZGlhLm9yZy93aWtpcGVkaWEvZW4vZi9mNi9DQ1ROX0NlYnVfbG9nby5wbmciIGdyb3VwLXRpdGxlPSJGUkVFTUlVTSIsIENDVE4gW0hEXQpodHRwOi8vMTIyLjU1LjI1Mi4xMzQ6ODQ0My9saXZlL2JiYTViNTM2ZmFlYWNiOWI1NmEzMjM5ZjFlZThlM2IzLzEubTN1OD9jaGVja2VkYnk6RE40LUlQVFYKCiNFWFRJTkY6LTEgdHZnLWxvZ289Imh0dHBzOi8vdXBsb2FkLndpa2ltZWRpYS5vcmcvd2lraXBlZGlhL2NvbW1vbnMvdGh1bWIvNS81Yy9Nb29uYnVnMm5kTG9nby5wbmcvMTkyMHB4LU1vb25idWcybmRMb2dvLnBuZyIgZ3JvdXAtdGl0bGU9IkZSRUVNSVVNIiwgTU9PTkJVRyBLSURTIFVTQSBbSERdCmh0dHBzOi8vbW9vbmJ1Zy1yb2t1dXMuYW1hZ2kudHYvcGxheWxpc3QubTN1OD9jaGVja2VkYnk6RE40LUlQVFYKCiNFWFRJTkY6LTEgdHZnLWxvZ289Imh0dHBzOi8vc3RhdGljLndpa2lhLm5vY29va2llLm5ldC9sb2dvcGVkaWEvaW1hZ2VzLzQvNGQvWm9vbW9vXzIwMTNfTG9nby5wbmcvcmV2aXNpb24vbGF0ZXN0L3NjYWxlLXRvLXdpZHRoLWRvd24vMzAwP2NiPTIwMjEwOTA5MTIzMDI4IiBncm91cC10aXRsZT0iRlJFRU1JVU0iLCBaT08gTU9PIChLSURTKSBbRkhEXQpodHRwczovL3pvb21vby1zYW1zdW5nYXUuYW1hZ2kudHYvcGxheWxpc3QubTN1OD9jaGVja2VkYnk6RE40LUlQVFYKCiNFWFRJTkY6LTEgdHZnLWxvZ289Imh0dHBzOi8vc3RhdGljLndpa2lhLm5vY29va2llLm5ldC9sb2dvcGVkaWEvaW1hZ2VzLzQvNGQvWm9vbW9vXzIwMTNfTG9nby5wbmcvcmV2aXNpb24vbGF0ZXN0L3NjYWxlLXRvLXdpZHRoLWRvd24vMzAwP2NiPTIwMjEwOTA5MTIzMDI4IiBncm91cC10aXRsZT0iRlJFRU1JVU0iLCBaT08gTU9PICgyKSBbSERdCmh0dHBzOi8vem9vbW9vLXNhbXN1bmdhdS5hbWFnaS50di9wbGF5bGlzdDcyMHAubTN1OD9jaGVja2VkYnk6RE40LUlQVFYKCiNFWFRJTkY6LTEgdHZnLWxvZ289Imh0dHBzOi8vdXBsb2FkLndpa2ltZWRpYS5vcmcvd2lraXBlZGlhL2VuL2IvYjgvQ2FsaWZvcm5pYV9NdXNpY19DaGFubmVsX0xvZ28ucG5nIiBncm91cC10aXRsZT0iRlJFRU1JVU0iLCBDQUxJRk9STklBIE1VU0lDIENIQU5ORUwgW0hEXQpodHRwczovL2NtYy1vbm8uYW1hZ2kudHYvcGxheWxpc3QubTN1OD9jaGVja2VkYnk6RE40LUlQVFYKCiNFWFRJTkY6LTEgdHZnLWxvZ289Imh0dHBzOi8vMTAwMGxvZ29zLm5ldC93cC1jb250ZW50L3VwbG9hZHMvMjAyMS8xMC9NVFYtTG9nby0yMDEwLnBuZyIgZ3JvdXAtdGl0bGU9IkZSRUVNSVVNIiwgTVRWIFtIRF0KaHR0cDovL2ZsMi5tb3Zlb25qb3kuY29tL01UVi9pbmRleC5tM3U4P2NoZWNrZWRieTpETjQtSVBUVgoKI0VYVElORjotMSB0dmctbG9nbz0iaHR0cHM6Ly9zdGF0aWMud2lraWEubm9jb29raWUubmV0L3ZpYWNvbTQ2MzMvaW1hZ2VzLzcvNzYvTVRWMl9sb2dvLnBuZyIgZ3JvdXAtdGl0bGU9IkZSRUVNSVVNIiwgTVRWMiBbU0RdCmh0dHBzOi8vZmw1Lm1vdmVvbmpveS5jb20vTVRWXzIvaW5kZXgubTN1OD9jaGVja2VkYnk6RE40LUlQVFYKCiNFWFRJTkY6LTEgdHZnLWxvZ289Imh0dHBzOi8vdXBsb2FkLndpa2ltZWRpYS5vcmcvd2lraXBlZGlhL2NvbW1vbnMvdGh1bWIvMy8zMC9NVFZfTGl2ZV8yMDIxX2xvZ28uc3ZnLzEwNzhweC1NVFZfTGl2ZV8yMDIxX2xvZ28uc3ZnLnBuZyIgZ3JvdXAtdGl0bGU9IkZSRUVNSVVNIiwgTVRWIExJVkUgW0hEXQpodHRwOi8vZmwyLm1vdmVvbmpveS5jb20vTVRWX0xJVkUvaW5kZXgubTN1OD9jaGVja2VkYnk6RE40LUlQVFYKCiNFWFRJTkY6LTEgdHZnLWxvZ289Imh0dHBzOi8vMTAwMGxvZ29zLm5ldC93cC1jb250ZW50L3VwbG9hZHMvMjAyMS8xMC9NVFYtTG9nby0yMDEwLnBuZyIgZ3JvdXAtdGl0bGU9IkZSRUVNSVVNIiwgTVRWIEJJR0dFU1QgUE9QIFtIRF0KaHR0cHM6Ly9zZXJ2aWNlLXN0aXRjaGVyLmNsdXN0ZXJzLnBsdXRvLnR2L3N0aXRjaC9obHMvY2hhbm5lbC81ZDE0ZmQxYTI1MmQzNWRlY2JjNDA4MGMvbWFzdGVyLm0zdTg/YWR2ZXJ0aXNpbmdJZD0mYXBwTmFtZT13ZWImYXBwU3RvcmVVcmw9JmFwcFZlcnNpb249RE5UJmFwcF9uYW1lPSZhcmNoaXRlY3R1cmU9JmJ1aWxkVmVyc2lvbj0mZGV2aWNlRE5UPTAmZGV2aWNlSWQ9NWQxNGZkMWEyNTJkMzVkZWNiYzQwODBjJmRldmljZUxhdD0mZGV2aWNlTG9uPSZkZXZpY2VNYWtlPXdlYiZkZXZpY2VNb2RlbD13ZWImZGV2aWNlVHlwZT13ZWImZGV2aWNlVmVyc2lvbj1ETlQmaW5jbHVkZUV4dGVuZGVkRXZlbnRzPWZhbHNlJm1hcmtldGluZ1JlZ2lvbj1VUyZzZXJ2ZXJTaWRlQWRzPWZhbHNlJnNpZD04NzAmdGVybWluYXRlPWZhbHNlJnVzZXJJZD0KCiNFWFRJTkY6LTEgdHZnLWxvZ289Imh0dHBzOi8vdXBsb2FkLndpa2ltZWRpYS5vcmcvd2lraXBlZGlhL2NvbW1vbnMvdGh1bWIvMC8wYS9NVFZfQ2xhc3NpY18yMDIxLnN2Zy8yMTUzcHgtTVRWX0NsYXNzaWNfMjAyMS5zdmcucG5nIiBncm91cC10aXRsZT0iRlJFRU1JVU0iLCBNVFYgQ0xBU1NJQyBbU0RdCmh0dHBzOi8vZmwyLm1vdmVvbmpveS5jb20vTVRWX0NMQVNTSUMvaW5kZXgubTN1OD9jaGVja2VkYnk6RE40LUlQVFYKCiNFWFRJTkY6LTEgdHZnLWxvZ289Imh0dHBzOi8vMTAwMGxvZ29zLm5ldC93cC1jb250ZW50L3VwbG9hZHMvMjAyMS8xMC9NVFYtTG9nby0yMDEwLnBuZyIgZ3JvdXAtdGl0bGU9IkZSRUVNSVVNIiwgTVRWIEZMT1cgTEFUSU5PIFtIRF0KaHR0cHM6Ly9zZXJ2aWNlLXN0aXRjaGVyLmNsdXN0ZXJzLnBsdXRvLnR2L3YxL3N0aXRjaC9lbWJlZC9obHMvY2hhbm5lbC81ZDM2MDljZDZhNmM3OGQ3NjcyZjJhODEvbWFzdGVyLm0zdTg/YWR2ZXJ0aXNpbmdJZD1jaGFubmVsJmFwcE5hbWU9cm9rdWNoYW5uZWwmYXBwVmVyc2lvbj0xLjAmYm1vZGVsPWJtMSZjaGFubmVsX2lkPWNoYW5uZWwmY29udGVudD1jaGFubmVsJmNvbnRlbnRfcmF0aW5nPVJPS1VfQURTX0NPTlRFTlRfUkFUSU5HJmNvbnRlbnRfdHlwZT1saXZlZmVlZCZjb3BwYT1mYWxzZSZkZXZpY2VETlQ9MSZkZXZpY2VJZD1jaGFubmVsJmRldmljZU1ha2U9cm9rdUNoYW5uZWwmZGV2aWNlTW9kZWw9d2ViJmRldmljZVR5cGU9cm9rdUNoYW5uZWwmZGV2aWNlVmVyc2lvbj0xLjAmZW1iZWRQYXJ0bmVyPXJva3VDaGFubmVsJmdlbnJlPVJPS1VfQURTX0NPTlRFTlRfR0VOUkUmaXNfbGF0PTEmcGxhdGZvcm09d2ViJnJkaWQ9Y2hhbm5lbCZzdHVkaW9faWQ9dmlhY29tJnRhZ3M9Uk9LVV9DT05URU5UX1RBR1MKCiNFWFRJTkY6LTEgdHZnLWxvZ289Imh0dHBzOi8vd2ViYXBwcy5zYWxpc2J1cnkuZWR1L25ld3NldmVudHMvZmlsZXMvaW1hZ2UvMjAxNy9NVFZVLmpwZyIgZ3JvdXAtdGl0bGU9IkZSRUVNSVVNIiwgTVRWIFUgW1NEXQpodHRwczovL2ZsNS5tb3Zlb25qb3kuY29tL01UVl9VL2luZGV4Lm0zdTg/Y2hlY2tlZGJ5OkRONC1JUFRWCgojRVhUSU5GOi0xIHR2Zy1sb2dvPSJodHRwczovL2ltYWdlcy5wbHV0by50di9jaGFubmVscy81ZDE0ZmMzMTI1MmQzNWRlY2JjNDA4MGIvY29sb3JMb2dvUE5HLnBuZyIgZ3JvdXAtdGl0bGU9IkZSRUVNSVVNIiwgWU8hIE1UViBbSERdCmh0dHBzOi8vc2VydmljZS1zdGl0Y2hlci5jbHVzdGVycy5wbHV0by50di92MS9zdGl0Y2gvZW1iZWQvaGxzL2NoYW5uZWwvNWQxNGZjMzEyNTJkMzVkZWNiYzQwODBiL21hc3Rlci5tM3U4P2FkdmVydGlzaW5nSWQ9Y2hhbm5lbCZhcHBOYW1lPXJva3VjaGFubmVsJmFwcFZlcnNpb249MS4wJmJtb2RlbD1ibTEmY2hhbm5lbF9pZD1jaGFubmVsJmNvbnRlbnQ9Y2hhbm5lbCZjb250ZW50X3JhdGluZz1ST0tVX0FEU19DT05URU5UX1JBVElORyZjb250ZW50X3R5cGU9bGl2ZWZlZWQmY29wcGE9ZmFsc2UmZGV2aWNlRE5UPTEmZGV2aWNlSWQ9Y2hhbm5lbCZkZXZpY2VNYWtlPXJva3VDaGFubmVsJmRldmljZU1vZGVsPXdlYiZkZXZpY2VUeXBlPXJva3VDaGFubmVsJmRldmljZVZlcnNpb249MS4wJmVtYmVkUGFydG5lcj1yb2t1Q2hhbm5lbCZnZW5yZT1ST0tVX0FEU19DT05URU5UX0dFTlJFJmlzX2xhdD0xJnBsYXRmb3JtPXdlYiZyZGlkPWNoYW5uZWwmc3R1ZGlvX2lkPXZpYWNvbSZ0YWdzPVJPS1VfQ09OVEVOVF9UQUdTCgojRVhUSU5GOi0xIHR2Zy1sb2dvPSJodHRwczovL2EwLmFueXJnYi5jb20vcG5naW1nLzIwNi8xMzQ0L3ZoMS1tZWdhaGl0cy1tdHYtY2xhc3NpYy12aDEtbG9nby10di1tdXNpYy12aWRlby10ZWxldmlzaW9uLWNoYW5uZWwtdGVsZXZpc2lvbi12aW9sZXQtbXVzaWMtbWFnZW50YS5wbmciIGdyb3VwLXRpdGxlPSJGUkVFTUlVTSIsIFZIMSBDTEFTU0lDUyBbSERdCmh0dHBzOi8vc2VydmljZS1zdGl0Y2hlci5jbHVzdGVycy5wbHV0by50di92MS9zdGl0Y2gvZW1iZWQvaGxzL2NoYW5uZWwvNjA3NmNkMWRmODU3NmQwMDA3YzgyMTkzL21hc3Rlci5tM3U4P2FkdmVydGlzaW5nSWQ9Y2hhbm5lbCZhcHBOYW1lPXJva3VjaGFubmVsJmFwcFZlcnNpb249MS4wJmJtb2RlbD1ibTEmY2hhbm5lbF9pZD1jaGFubmVsJmNvbnRlbnQ9Y2hhbm5lbCZjb250ZW50X3JhdGluZz1ST0tVX0FEU19DT05URU5UX1JBVElORyZjb250ZW50X3R5cGU9bGl2ZWZlZWQmY29wcGE9ZmFsc2UmZGV2aWNlRE5UPTEmZGV2aWNlSWQ9Y2hhbm5lbCZkZXZpY2VNYWtlPXJva3VDaGFubmVsJmRldmljZU1vZGVsPXdlYiZkZXZpY2VUeXBlPXJva3VDaGFubmVsJmRldmljZVZlcnNpb249MS4wJmVtYmVkUGFydG5lcj1yb2t1Q2hhbm5lbCZnZW5yZT1ST0tVX0FEU19DT05URU5UX0dFTlJFJmlzX2xhdD0xJnBsYXRmb3JtPXdlYiZyZGlkPWNoYW5uZWwmc3R1ZGlvX2lkPXZpYWNvbSZ0YWdzPVJPS1VfQ09OVEVOVF9UQUdTCgojRVhUSU5GOi0xIHR2Zy1sb2dvPSJodHRwczovL2EwLmFueXJnYi5jb20vcG5naW1nLzIwNi8xMzQ0L3ZoMS1tZWdhaGl0cy1tdHYtY2xhc3NpYy12aDEtbG9nby10di1tdXNpYy12aWRlby10ZWxldmlzaW9uLWNoYW5uZWwtdGVsZXZpc2lvbi12aW9sZXQtbXVzaWMtbWFnZW50YS5wbmciIGdyb3VwLXRpdGxlPSJGUkVFTUlVTSIsIFZIMSBVUyBbSERdCmh0dHA6Ly9mbDIubW92ZW9uam95LmNvbS9WSDEvaW5kZXgubTN1OD9jaGVja2VkYnk6RE40LUlQVFYKCiNFWFRJTkY6LTEgdHZnLWxvZ289Imh0dHBzOi8vdXBsb2FkLndpa2ltZWRpYS5vcmcvd2lraXBlZGlhL2NvbW1vbnMvYi9iZC9WZXZvXzIwMTZfbG9nby5wbmciIGdyb3VwLXRpdGxlPSJGUkVFTUlVTSIsIFZFVk8gQ09VTlRSWSBNVVNJQyBbSERdCmh0dHBzOi8vc2VydmljZS1zdGl0Y2hlci5jbHVzdGVycy5wbHV0by50di92MS9zdGl0Y2gvZW1iZWQvaGxzL2NoYW5uZWwvNWRhMGQ3NWU4NDgzMDkwMDA5OGExZWEwL21hc3Rlci5tM3U4P2FkdmVydGlzaW5nSWQ9Y2hhbm5lbCZhcHBOYW1lPXJva3VjaGFubmVsJmFwcFZlcnNpb249MS4wJmJtb2RlbD1ibTEmY2hhbm5lbF9pZD1jaGFubmVsJmNvbnRlbnQ9Y2hhbm5lbCZjb250ZW50X3JhdGluZz1ST0tVX0FEU19DT05URU5UX1JBVElORyZjb250ZW50X3R5cGU9bGl2ZWZlZWQmY29wcGE9ZmFsc2UmZGV2aWNlRE5UPTEmZGV2aWNlSWQ9Y2hhbm5lbCZkZXZpY2VNYWtlPXJva3VDaGFubmVsJmRldmljZU1vZGVsPXdlYiZkZXZpY2VUeXBlPXJva3VDaGFubmVsJmRldmljZVZlcnNpb249MS4wJmVtYmVkUGFydG5lcj1yb2t1Q2hhbm5lbCZnZW5yZT1ST0tVX0FEU19DT05URU5UX0dFTlJFJmlzX2xhdD0xJnBsYXRmb3JtPXdlYiZyZGlkPWNoYW5uZWwmc3R1ZGlvX2lkPXZpYWNvbSZ0YWdzPVJPS1VfQ09OVEVOVF9UQUdTCgojRVhUSU5GOi0xIHR2Zy1sb2dvPSJodHRwczovL3VwbG9hZC53aWtpbWVkaWEub3JnL3dpa2lwZWRpYS9jb21tb25zL2IvYmQvVmV2b18yMDE2X2xvZ28ucG5nIiBncm91cC10aXRsZT0iRlJFRU1JVU0iLCBWRVZPIFBPUCAxIFtIRF0KaHR0cHM6Ly9qbXAyLnVrL3NhbS1HQkJDMTkwMDAwMTdWLm0zdTg/Y2hlY2tlZGJ5OkRONC1JUFRWCgojRVhUSU5GOi0xIHR2Zy1sb2dvPSJodHRwczovL3VwbG9hZC53aWtpbWVkaWEub3JnL3dpa2lwZWRpYS9jb21tb25zL2IvYmQvVmV2b18yMDE2X2xvZ28ucG5nIiBncm91cC10aXRsZT0iRlJFRU1JVU0iLCBWRVZPIFBPUCBbSERdCmh0dHBzOi8vc2VydmljZS1zdGl0Y2hlci5jbHVzdGVycy5wbHV0by50di92MS9zdGl0Y2gvZW1iZWQvaGxzL2NoYW5uZWwvNWQ5M2I2MzViNDNkZDFhMzk5YjM5ZWVlL21hc3Rlci5tM3U4P2FkdmVydGlzaW5nSWQ9Y2hhbm5lbCZhcHBOYW1lPXJva3VjaGFubmVsJmFwcFZlcnNpb249MS4wJmJtb2RlbD1ibTEmY2hhbm5lbF9pZD1jaGFubmVsJmNvbnRlbnQ9Y2hhbm5lbCZjb250ZW50X3JhdGluZz1ST0tVX0FEU19DT05URU5UX1JBVElORyZjb250ZW50X3R5cGU9bGl2ZWZlZWQmY29wcGE9ZmFsc2UmZGV2aWNlRE5UPTEmZGV2aWNlSWQ9Y2hhbm5lbCZkZXZpY2VNYWtlPXJva3VDaGFubmVsJmRldmljZU1vZGVsPXdlYiZkZXZpY2VUeXBlPXJva3VDaGFubmVsJmRldmljZVZlcnNpb249MS4wJmVtYmVkUGFydG5lcj1yb2t1Q2hhbm5lbCZnZW5yZT1ST0tVX0FEU19DT05URU5UX0dFTlJFJmlzX2xhdD0xJnBsYXRmb3JtPXdlYiZyZGlkPWNoYW5uZWwmc3R1ZGlvX2lkPXZpYWNvbSZ0YWdzPVJPS1VfQ09OVEVOVF9UQUdTCgojRVhUSU5GOi0xIHR2Zy1sb2dvPSJodHRwczovL3VwbG9hZC53aWtpbWVkaWEub3JnL3dpa2lwZWRpYS9jb21tb25zL2IvYmQvVmV2b18yMDE2X2xvZ28ucG5nIiBncm91cC10aXRsZT0iRlJFRU1JVU0iLCBWRVZPIDkwJ1MgTVVTSUMgW0hEXQpodHRwczovL3NlcnZpY2Utc3RpdGNoZXIuY2x1c3RlcnMucGx1dG8udHYvdjEvc3RpdGNoL2VtYmVkL2hscy9jaGFubmVsLzVmZDdiYjFmODZkOTRhMDAwNzk2ZTJjMi9tYXN0ZXIubTN1OD9hZHZlcnRpc2luZ0lkPWNoYW5uZWwmYXBwTmFtZT1yb2t1Y2hhbm5lbCZhcHBWZXJzaW9uPTEuMCZibW9kZWw9Ym0xJmNoYW5uZWxfaWQ9Y2hhbm5lbCZjb250ZW50PWNoYW5uZWwmY29udGVudF9yYXRpbmc9Uk9LVV9BRFNfQ09OVEVOVF9SQVRJTkcmY29udGVudF90eXBlPWxpdmVmZWVkJmNvcHBhPWZhbHNlJmRldmljZUROVD0xJmRldmljZUlkPWNoYW5uZWwmZGV2aWNlTWFrZT1yb2t1Q2hhbm5lbCZkZXZpY2VNb2RlbD13ZWImZGV2aWNlVHlwZT1yb2t1Q2hhbm5lbCZkZXZpY2VWZXJzaW9uPTEuMCZlbWJlZFBhcnRuZXI9cm9rdUNoYW5uZWwmZ2VucmU9Uk9LVV9BRFNfQ09OVEVOVF9HRU5SRSZpc19sYXQ9MSZwbGF0Zm9ybT13ZWImcmRpZD1jaGFubmVsJnN0dWRpb19pZD12aWFjb20mdGFncz1ST0tVX0NPTlRFTlRfVEFHUwoKI0VYVElORjotMSB0dmctbG9nbz0iaHR0cHM6Ly91cGxvYWQud2lraW1lZGlhLm9yZy93aWtpcGVkaWEvY29tbW9ucy9iL2JkL1Zldm9fMjAxNl9sb2dvLnBuZyIgZ3JvdXAtdGl0bGU9IkZSRUVNSVVNIiwgVkVWTyAySyBNVVNJQyBbSERdCmh0dHBzOi8vc2VydmljZS1zdGl0Y2hlci5jbHVzdGVycy5wbHV0by50di92MS9zdGl0Y2gvZW1iZWQvaGxzL2NoYW5uZWwvNWZkN2JjYTNlMGE0ZWUwMDA3YTM4ZThjL21hc3Rlci5tM3U4P2FkdmVydGlzaW5nSWQ9Y2hhbm5lbCZhcHBOYW1lPXJva3VjaGFubmVsJmFwcFZlcnNpb249MS4wJmJtb2RlbD1ibTEmY2hhbm5lbF9pZD1jaGFubmVsJmNvbnRlbnQ9Y2hhbm5lbCZjb250ZW50X3JhdGluZz1ST0tVX0FEU19DT05URU5UX1JBVElORyZjb250ZW50X3R5cGU9bGl2ZWZlZWQmY29wcGE9ZmFsc2UmZGV2aWNlRE5UPTEmZGV2aWNlSWQ9Y2hhbm5lbCZkZXZpY2VNYWtlPXJva3VDaGFubmVsJmRldmljZU1vZGVsPXdlYiZkZXZpY2VUeXBlPXJva3VDaGFubmVsJmRldmljZVZlcnNpb249MS4wJmVtYmVkUGFydG5lcj1yb2t1Q2hhbm5lbCZnZW5yZT1ST0tVX0FEU19DT05URU5UX0dFTlJFJmlzX2xhdD0xJnBsYXRmb3JtPXdlYiZyZGlkPWNoYW5uZWwmc3R1ZGlvX2lkPXZpYWNvbSZ0YWdzPVJPS1VfQ09OVEVOVF9UQUdTCgojRVhUSU5GOi0xIHR2Zy1sb2dvPSJodHRwczovL2lmb29kLnR2L3ZpZXdzL2ltYWdlcy9pZm9vZF9sb2dvLnBuZyIgZ3JvdXAtdGl0bGU9IkZSRUVNSVVNIiwgaUZPT0QuVFYgW0hEXQpodHRwczovL2lmb29kLXZpemlvLmFtYWdpLnR2L3BsYXlsaXN0Lm0zdTg/Y2hlY2tlZGJ5OkRONC1JUFRWCgojRVhUSU5GOi0xIHR2Zy1sb2dvPSJodHRwczovL3VwbG9hZC53aWtpbWVkaWEub3JnL3dpa2lwZWRpYS9lbi9jL2NmL0dsb2JhbF9OYXRpb25hbF8yMDEzLnBuZyIgZ3JvdXAtdGl0bGU9IkZSRUVNSVVNIiwgR0xPQkFMIE5FV1MgTkFUSU9OQUwgW0hEXQpodHRwczovL2xpdmUuY29ydXNkaWdpdGFsZGV2LmNvbS9ncm91cGQvbGl2ZS80OWE5MWU3Zi0xMDIzLTQzMGYtOGQ2Ni01NjEwNTVmM2QwZjcvbGl2ZS5pc21sLy5tM3U4P2NoZWNrZWRieTpETjQtSVBUVgoKI0VYVElORjotMSB0dmctbG9nbz0iaHR0cHM6Ly9teXRpbWVtb3ZpZW5ldHdvcmsuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy9lbGVtZW50b3IvdGh1bWJzL2xvZ28td2hpdGUtb3ZidmJocW1qbHlpbWlqeTFqOGpkamdyczNleXg1ZzBpZjdpY2c5c3QwLnBuZyIgZ3JvdXAtdGl0bGU9IkZSRUVNSVVNIiwgTVlUSU1FIE1PVklFIE5FVFdPUksgW0hEXQpodHRwczovL215dGltZS10Y2wuYW1hZ2kudHYvcGxheWxpc3QubTN1OD9jaGVja2VkYnk6RE40LUlQVFYKCiNFWFRJTkY6LTEgdHZnLWxvZ289Imh0dHBzOi8vcHJvdmlkZXItc3RhdGljLnBsZXgudHYvZXBnL2ltYWdlcy9vdHRfY2hhbm5lbHMvbG9nb3MvbW92aWVzcGhlcmVfbG9nb19kYXJrLnBuZyIgZ3JvdXAtdGl0bGU9IkZSRUVNSVVNIiwgTU9WSUVTUEhFUkUgVS5LIFtIRF0KaHR0cHM6Ly9tb3ZpZXNwaGVyZXVrLXNhbXN1bmd1ay5hbWFnaS50di9wbGF5bGlzdC5tM3U4P2NoZWNrZWRieTpETjQtSVBUVgoKI0VYVElORjotMSB0dmctbG9nbz0iaHR0cHM6Ly9wcm92aWRlci1zdGF0aWMucGxleC50di9lcGcvaW1hZ2VzL290dF9jaGFubmVscy9sb2dvcy9tb3ZpZXNwaGVyZV9sb2dvX2RhcmsucG5nIiBncm91cC10aXRsZT0iRlJFRU1JVU0iLCBNT1ZJRVNQSEVSRSBVUyBbSERdCmh0dHBzOi8vbGl2ZXR2LWZhLnR1YmkudmlkZW8vbW92aWVzcGhlcmUvcGxheWxpc3QubTN1OD9jaGVja2VkYnk6RE40LUlQVFYKCiNFWFRJTkY6LTEgdHZnLWxvZ289Imh0dHBzOi8vcHJvdmlkZXItc3RhdGljLnBsZXgudHYvZXBnL2ltYWdlcy9vdHRfY2hhbm5lbHMvbG9nb3MvbW92aWVzcGhlcmVfbG9nb19kYXJrLnBuZyIgZ3JvdXAtdGl0bGU9IkZSRUVNSVVNIiwgTU9WSUVTUEhFUkUgQ0FOQURBIFtIRF0KaHR0cHM6Ly9hcG9sbG8ucHJvZHVjdGlvbi1wdWJsaWMudHViaS5pby9saXZlL2FjLW1vdmllc3BoZXJlLWNhbmFkYTIubTN1OD9jaGVja2VkYnk6RE40LUlQVFYKCiNFWFRJTkY6LTEgdHZnLWxvZ289Imh0dHBzOi8vaW1hZ2VyZXNpemVyLnN0YXRpYzkubmV0LmF1L3hNRFpLWUt5YWItWlBVemU3d3JreXBkbFJSaz0vMTkyMHgwL3Ztcy1saXZlLWV2ZW50LWFzc2V0cy1wcm9kLnMzLWFwLXNvdXRoZWFzdC0yLmFtYXpvbmF3cy5jb20lMkZ0diUyRmltYWdlcyUyRjIwMjUlMkYwMSUyRjY2MDgxMSUyRmxpdmUtZXZlbnQtbG9nby00LnBuZyIgZ3JvdXAtdGl0bGU9IkZSRUVNSVVNIiwgTElGRVRJTUUgTU9WSUUgTkVUV09SSyBbSERdCmh0dHA6Ly9mbDIubW92ZW9uam95LmNvbS9MSUZFVElNRV9NT1ZJRV9ORVRXT1JLL2luZGV4Lm0zdTg/Y2hlY2tlZGJ5OkRONC1JUFRWCgojRVhUSU5GOi0xIHR2Zy1sb2dvPSJodHRwczovL3Byb3ZpZGVyLXN0YXRpYy5wbGV4LnR2L2VwZy9jbXMvcHJvZHVjdGlvbi9jOTRlMzIyMC05YTQ1LTQyZTktOGJkYi0wMWZjNDNlMGYyN2Mvd2hpdGVfdGV4dEFjdGlvbl9Ib2xseXdvb2RfTW92aWVzX2xvZ29fZGFya18tX0FuZ2VsYV9DaGFuLnBuZyIgZ3JvdXAtdGl0bGU9IkZSRUVNSVVNIiwgQUNUSU9OIEhPTExZV09PRCBNT1ZJRVMgW0ZIRF0KaHR0cHM6Ly9saWdodG5pbmctYWN0aW9uaG9sbHl3b29kLXhpYW9taS5hbWFnaS50di9wbGF5bGlzdC5tM3U4P2NoZWNrZWRieTpETjQtSVBUVgoKI0VYVElORjotMSB0dmctbG9nbz0iaHR0cHM6Ly91cGxvYWQud2lraW1lZGlhLm9yZy93aWtpcGVkaWEvY29tbW9ucy82LzY0L0FyaXJhbmdfbG9nby5wbmciIGdyb3VwLXRpdGxlPSJGUkVFTUlVTSIsIEFSSVJBTkcgW0ZIRF0KaHR0cDovL2FtZGxpdmUuY3RuZC5jb20uZWRnZXN1aXRlLm5ldC9hcmlyYW5nXzFjaC9zbWlsOmFyaXJhbmdfMWNoLnNtaWwvcGxheWxpc3QubTN1OD9jaGVja2VkYnk6RE40LUlQVFYKCiNFWFRJTkY6LTEgdHZnLWxvZ289Imh0dHBzOi8vcG9zdGVyLnN0YXJodWJnby5jb20vTGluZWFyX2NoYW5uZWxzMi81MTFfMTkyMHgxMDgwX0hUVi5wbmciIGdyb3VwLXRpdGxlPSJGUkVFTUlVTSIsIEFYTiBWaWV0bmFtIFtTRF0KaHR0cDovLzEyNWh2dC5kZG5zLm5ldDoyMTU4NS9heG4vaW5kZXgubTN1OD9jaGVja2VkYnk6RE40LUlQVFYKCiNFWFRJTkY6LTEgdHZnLWxvZ289Imh0dHBzOi8vaW1hZ2VzLnBsdXRvLnR2L2NoYW5uZWxzLzU5YjcyMjUyNjk5NjA4NDAzOGMwMWUxYi9jb2xvckxvZ29QTkcucG5nIiBncm91cC10aXRsZT0iRlJFRU1JVU0iLCBJTVBBQ1QhIFdSRVNUTElORyBbRkhEXQpodHRwczovL2QycDM3Mm94aXdtY24xLmNsb3VkZnJvbnQubmV0L2hscy9tYWluLm0zdTg/Y2hlY2tlZGJ5OkRONC1JUFRWCgojRVhUSU5GOi0xIHR2Zy1sb2dvPSJodHRwczovL3d3dy5jbGlwYXJ0bWF4LmNvbS9wbmcvbWlkZGxlLzQ2LTQ2Mjk1M19yZWQtYnVsbC10di1sb2dvLXJlZC1idWxsLXR2LWxvZ28ucG5nIiBncm91cC10aXRsZT0iRlJFRU1JVU0iLCBSRURCVUxMIFRWIFtIRF0KaHR0cHM6Ly9yYm1uLWxpdmUuYWthbWFpemVkLm5ldC9obHMvbGl2ZS81OTA5NjQvQm9SQi1BVC9tYXN0ZXJfMzM2MC5tM3U4P2NoZWNrZWRieTpETjQtSVBUVgoKI0VYVElORjotMSB0dmctbG9nbz0iaHR0cHM6Ly9pLmltZ3VyLmNvbS9LaDRNV2FZLnBuZyIgZ3JvdXAtdGl0bGU9IkZSRUVNSVVNIiwgT1VURE9PUiBDSEFOTkVMIFtGSERdCmh0dHBzOi8vY2RuLWFwc2UxLXByb2QudHN2Mi5hbWFnaS50di9saW5lYXIvYW1nMDA3MTgtb3V0ZG9vcmNoYW5uZWxhLW91dGRvb3J0dm56LXNhbXN1bmduei9wbGF5bGlzdC5tM3U4P2NoZWNrZWRieTpETjQtSVBUVgoKI0VYVElORjotMSB0dmctbG9nbz0iaHR0cHM6Ly93d3cucGRnYS5jb20vZmlsZXMvdTI0NTcyMS9vdXRzaWRlX3R2X2xvZ28ucG5nIiBncm91cC10aXRsZT0iRlJFRU1JVU0iLCBPVVRTSURFIFRWIFtIRF0KaHR0cDovL2ZsMi5tb3Zlb25qb3kuY29tL09VVFNJREVfVFYvaW5kZXgubTN1OD9jaGVja2VkYnk6RE40LUlQVFYKCiNFWFRJTkY6LTEgdHZnLWxvZ289Imh0dHBzOi8vdXBsb2FkLndpa2ltZWRpYS5vcmcvd2lraXBlZGlhL2NvbW1vbnMvdGh1bWIvOC84Yy9UZW5uaXNfQ2hhbm5lbF9sb2dvLnN2Zy81MTJweC1UZW5uaXNfQ2hhbm5lbF9sb2dvLnN2Zy5wbmciIGdyb3VwLXRpdGxlPSJGUkVFTUlVTSIsIFRFTk5JUyBDSEFOTkVMIElOVEVSTkFUSU9OQUwgW0hEXQpodHRwOi8vZmwyLm1vdmVvbmpveS5jb20vVEVOTklTX0NIQU5ORUwvaW5kZXgubTN1OD9jaGVja2VkYnk6RE40LUlQVFYKCiNFWFRJTkY6LTEgdHZnLWxvZ289Imh0dHBzOi8vc3RhdGljLndpa2lhLm5vY29va2llLm5ldC9sb2dvcGVkaWEvaW1hZ2VzL2YvZjcvQ3VyaW9zaXR5X0NoYW5uZWxfMy5wbmciIGdyb3VwLXRpdGxlPSJGUkVFTUlVTSIsIENVUklPU0lUWSBDSEFOTkVMIFVTIFtIRF0KaHR0cDovL2ZsMy5tb3Zlb25qb3kuY29tL0N1cmlvc2l0eV9TdHJlYW0vaW5kZXgubTN1OD9jaGVja2VkYnk6RE40LUlQVFYKCiNFWFRJTkY6LTEgdHZnLWxvZ289Imh0dHBzOi8vdXBsb2FkLndpa2ltZWRpYS5vcmcvd2lraXBlZGlhL2VuLzEvMWQvTG92ZV9OYXR1cmVfVFYucG5nIiBncm91cC10aXRsZT0iRlJFRU1JVU0iLCBMT1ZFIE5BVFVSRSBbVUhEXQpodHRwczovL2QxOGR5aXd1OTd3bTZxLmNsb3VkZnJvbnQubmV0L3BsYXlsaXN0MjE2MHAubTN1OD9jaGVja2VkYnk6RE40LUlQVFYKCiNFWFRJTkY6LTEgdHZnLWxvZ289Imh0dHBzOi8vMTAwMGxvZ29zLm5ldC93cC1jb250ZW50L3VwbG9hZHMvMjAxNy8wNC9OYXRpb25hbC1HZW9ncmFwaGljLUxvZ28tMjAwNS5qcGciIGdyb3VwLXRpdGxlPSJGUkVFTUlVTSIsIE5BVElPTkFMIEdFT0dSQVBISUMgVVMgW0hEXQpodHRwOi8vZmwyLm1vdmVvbmpveS5jb20vTmF0aW9uYWxfR2VvZ3JhcGhpYy9pbmRleC5tM3U4P2NoZWNrZWRieTpETjQtSVBUVgoKI0VYVElORjotMSB0dmctbG9nbz0iaHR0cHM6Ly93YWxscGFwZXJzLmNvbS9pbWFnZXMvaGQvbmF0aW9uYWwtZ2VvZ3JhcGhpYy13aWxkLWxvZ28tMDFiNzVwdzQzcDV6NzV5Yi0wMWI3NXB3NDNwNXo3NXliLmpwZyIgZ3JvdXAtdGl0bGU9IkZSRUVNSVVNIiwgTkFUIEdFTyBXSUxEIFtIRF0KaHR0cDovL2ZsMi5tb3Zlb25qb3kuY29tL05hdF9HZW9fV2lsZC9pbmRleC5tM3U4P2NoZWNrZWRieTpETjQtSVBUVgoKI0VYVElORjotMSB0dmctbG9nbz0iaHR0cHM6Ly9nZXRsb2dvLm5ldC93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8xMC9zbWl0aHNvbmlhbi1jaGFubmVsLWxvZ28tdmVjdG9yLnBuZyIgZ3JvdXAtdGl0bGU9IkZSRUVNSVVNIiwgU01JVEhTT05JQU4gQ0hBTk5FTCBbRkhEXQpodHRwOi8vZmwyLm1vdmVvbmpveS5jb20vU01JVEhTT05JQU5fQ0hBTk5FTC9pbmRleC5tM3U4P2NoZWNrZWRieTpETjQtSVBUVgoKI0VYVElORjotMSB0dmctbG9nbz0iaHR0cHM6Ly9kdHZuZXdzLmh1L3NpdGVzL2RlZmF1bHQvZmlsZXMvc3R5bGVzL25vcm1hbF9zaXplL3B1YmxpYy93aWRlX2ltYWdlcy90cmF2ZWx4cF80a193aWRlLnBuZyIgZ3JvdXAtdGl0bGU9IkZSRUVNSVVNIiwgVFJBVkVMIFhQIFtIRF0KaHR0cHM6Ly90cmF2ZWx4cC10cmF2ZWx4cC0xLWV1LnJha3V0ZW4ud3VybC50di9wbGF5bGlzdC5tM3U4P2NoZWNrZWRieTpETjQtSVBUVgoKI0VYVElORjotMSB0dmctbG9nbz0iaHR0cHM6Ly9pLmltZ3VyLmNvbS9RUXVQalRELnBuZyIgZ3JvdXAtdGl0bGU9IkZSRUVNSVVNIiwgWFBMT1JFIENIQU5ORUwgW1NEXQpodHRwOi8veGxwb3JlLXNhbXN1bmd1cy5hbWFnaS50di9wbGF5bGlzdC5tM3U4P2NoZWNrZWRieTpETjQtSVBUVgoKCgojRVhUSU5GOi0xIHR2Zy1sb2dvPSJodHRwczovL3d3dy5wZWFjb2NrdHYuY29tL2RhbS9ncm93dGgvYXNzZXRzL0NvbGxlY3Rpb25zL2JyYXZvL0JyYXZvLW1pbi5wbmciIGdyb3VwLXRpdGxlPSJGUkVFTUlVTSsiLCBCUkFWTyBbSERdCmh0dHA6Ly9mbDIubW92ZW9uam95LmNvbS9CUkFWTy9pbmRleC5tM3U4P2NoZWNrZWRieTpETjQtSVBUVgoKI0VYVElORjotMSB0dmctbG9nbz0iaHR0cHM6Ly91cGxvYWQud2lraW1lZGlhLm9yZy93aWtpcGVkaWEvY29tbW9ucy8wLzAxL0FNQ19sb2dvXzIwMTYucG5nIiBncm91cC10aXRsZT0iRlJFRU1JVU0rIiwgU1RPUklFUyBCWSBBTUMgW0hEXQpodHRwOi8vZmw1Lm1vdmVvbmpveS5jb20vQU1DX05FVFdPUksvaW5kZXgubTN1OD9jaGVja2VkYnk6RE40LUlQVFYKCiNFWFRJTkY6LTEgdHZnLWxvZ289Imh0dHBzOi8vc3RhdGljLndpa2lhLm5vY29va2llLm5ldC9sb2dvcGVkaWEvaW1hZ2VzLzAvMGIvQmVJTl9YdHJhLlBORyIgZ3JvdXAtdGl0bGU9IkZSRUVNSVVNKyIsIEJFSU4gU1BPUlRTIFhUUkEgW0hEXQpodHRwOi8vY2ZkLXY0LXNlcnZpY2UtY2hhbm5lbC1zdGl0Y2hlci11c2UxLTEucHJkLnBsdXRvLnR2L3N0aXRjaC9obHMvY2hhbm5lbC81ZGY5NzVlMmIyN2NmNTAwMDkyMWMxMDIvbWFzdGVyLm0zdTg/YXBwTmFtZT13ZWImYXBwVmVyc2lvbj11bmtub3duJmNsaWVudFRpbWU9MCZkZXZpY2VETlQ9MCZkZXZpY2VJZD02YzI2ZjVhNC0zMGQzLTExZWYtOWNmNS1lOWRkZmY4ZmY0OTYmZGV2aWNlTWFrZT1DaHJvbWUmZGV2aWNlTW9kZWw9d2ViJmRldmljZVR5cGU9d2ViJmRldmljZVZlcnNpb249dW5rbm93biZpbmNsdWRlRXh0ZW5kZWRFdmVudHM9ZmFsc2Umc2VydmVyU2lkZUFkcz1mYWxzZSZzaWQ9Y2I5MzIwNDYtZTAwMS00MTg5LWE4NzEtMTM3NmFhMmVjMzQwCgojRVhUSU5GOi0xIHR2Zy1sb2dvPSJodHRwczovL3ZvbGxleWJhbGxtYWcuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDI0LzEwL0NCUy1TcG9ydHMtTmV0d29yay1sb2dvLmpwZyIgZ3JvdXAtdGl0bGU9IkZSRUVNSVVNKyIsIENCUyBTUE9SVFMgTkVUV09SSyBVUyBbSERdCmh0dHA6Ly9mbDIubW92ZW9uam95LmNvbS9DQlNfU1BPUlRTX05FVFdPUksvaW5kZXgubTN1OD9jaGVja2VkYnk6RE40LUlQVFYKCiNFWFRJTkY6LTEgdHZnLWxvZ289Imh0dHBzOi8vdXBsb2FkLndpa2ltZWRpYS5vcmcvd2lraXBlZGlhL2NvbW1vbnMvNi82MC9FU1BOX2xvZ29zLnBuZyIgIGdyb3VwLXRpdGxlPSJGUkVFTUlVTSsiLCBFU1BOIFUgW0hEXQpodHRwOi8vZmwyLm1vdmVvbmpveS5jb20vRVNQTl9VL2luZGV4Lm0zdTg/Y2hlY2tlZGJ5OkRONC1JUFRWCgojRVhUSU5GOi0xIHR2Zy1sb2dvPSJodHRwczovL3VwbG9hZC53aWtpbWVkaWEub3JnL3dpa2lwZWRpYS9jb21tb25zL3RodW1iLzMvMzcvMjAxNV9Gb3hfU3BvcnRzXzFfbG9nby5zdmcvMTIwMHB4LTIwMTVfRm94X1Nwb3J0c18xX2xvZ28uc3ZnLnBuZyIgZ3JvdXAtdGl0bGU9IkZSRUVNSVVNKyIsIEZPWCBTUE9SVFMgMSBbSERdCmh0dHA6Ly9mbDIubW92ZW9uam95LmNvbS9GT1hfU3BvcnRzXzEvaW5kZXgubTN1OD9jaGVja2VkYnk6RE40LUlQVFYKCiNFWFRJTkY6LTEgdHZnLWxvZ289Imh0dHBzOi8vdXBsb2FkLndpa2ltZWRpYS5vcmcvd2lraXBlZGlhL2VuL3RodW1iL2QvZDIvTkJBX1RWLnN2Zy8xMjAwcHgtTkJBX1RWLnN2Zy5wbmciIGdyb3VwLXRpdGxlPSJGUkVFTUlVTSsiLCBOQkEgVFYgVVMgW0hEXQpodHRwczovL3YxLnRoZXR2YXBwLnRvL2hscy9OQkFUVi9pbmRleC5tM3U4P2NoZWNrZWRieTpETjQtSVBUVgoKI0VYVElORjotMSB0dmctbG9nbz0iaHR0cHM6Ly91cGxvYWQud2lraW1lZGlhLm9yZy93aWtpcGVkaWEvY29tbW9ucy90aHVtYi82LzYyL1VGQ19CcmFuZF9Mb2dvLnN2Zy8xOTIwcHgtVUZDX0JyYW5kX0xvZ28uc3ZnLnBuZyIgZ3JvdXAtdGl0bGU9IkZSRUVNSVVNKyIsIFVGQyBbSERdCmh0dHBzOi8vYWVnaXMtY2xvdWRmcm9udC0xLnR1YmkudmlkZW8vYTc4ZWEyODMtODY2Ni00NGExLWEwZjYtZmRlNWQyMjlhYzIxL3BsYXlsaXN0Lm0zdTg/Y2hlY2tlZGJ5OkRONC1JUFRWCgojRVhUSU5GOi0xIHR2Zy1sb2dvPSJodHRwczovL3VwbG9hZC53aWtpbWVkaWEub3JnL3dpa2lwZWRpYS9jb21tb25zL3RodW1iL2EvYWEvQ29tZWR5X0NlbnRyYWxfMjAxOC5zdmcvMTIwMHB4LUNvbWVkeV9DZW50cmFsXzIwMTguc3ZnLnBuZyIgZ3JvdXAtdGl0bGU9IkZSRUVNSVVNKyIsIENPTUVEWSBDRU5UUkFMIFVTIFtIRF0KaHR0cDovL2ZsMy5tb3Zlb25qb3kuY29tL0NvbWVkeV9DZW50cmFsL2luZGV4Lm0zdTg/Y2hlY2tlZGJ5OkRONC1JUFRWCgojRVhUSU5GOi0xIHR2Zy1sb2dvPSJodHRwczovL3d3dy5lbGVjdHJpY25vdy50di90aGVtZXMvY3VzdG9tL2VsZWMvZWxlY3RyaWNub3cvbG9nby5wbmciIGdyb3VwLXRpdGxlPSJGUkVFTUlVTSsiLCBFTEVDVFJJQyBOT1cgW0ZIRF0KaHR0cHM6Ly9lbGVjLWVuLm90dGVyYXZpc2lvbi5jb20vZWxlYy9lbi9lbGVjX2VuLm0zdTg/Y2hlY2tlZGJ5OkRONC1JUFRWCgojRVhUSU5GOi0xIHR2Zy1sb2dvPSJodHRwczovL3VwbG9hZC53aWtpbWVkaWEub3JnL3dpa2lwZWRpYS9jb21tb25zL3RodW1iLzMvMzcvRlhfTG9nb18yMDIzLnN2Zy8yNTYwcHgtRlhfTG9nb18yMDIzLnN2Zy5wbmciIGdyb3VwLXRpdGxlPSJGUkVFTUlVTSsiLCBGWCBbU0RdCmh0dHA6Ly9mbDIubW92ZW9uam95LmNvbS9GWC9pbmRleC5tM3U4P2NoZWNrZWRieTpETjQtSVBUVgoKI0VYVElORjotMSB0dmctbG9nbz0iaHR0cHM6Ly9zdGF0aWMud2lraWEubm9jb29raWUubmV0L3J1c3NlbC9pbWFnZXMvZC9kYS9EaXNuZXlfQ2hhbm5lbF9Mb2dvXzIwMjQucG5nLyIgZ3JvdXAtdGl0bGU9IkZSRUVNSVVNKyIsIERJU05FWSBDSEFOTkVMIFVTIFtIRF0KaHR0cHM6Ly92MS50aGV0dmFwcC50by9obHMvRGlzbmV5Q2hhbm5lbEVhc3QvaW5kZXgubTN1OD9jaGVja2VkYnk6RE40LUlQVFYKCiNFWFRJTkY6LTEgdHZnLWxvZ289Imh0dHBzOi8vY2RuLnByb2Qud2Vic2l0ZS1maWxlcy5jb20vNjY3ZjRhZjNmNGYzYTdhZjAxMDE2NjYxLzY3MWYxMTQzOGQ0Mjg3ODRlMTk2ZjA3NV9ESl9CX0Rpc25leV9PWShjeWFuLXllbGxvdykucG5nIiBncm91cC10aXRsZT0iRlJFRU1JVU0rIiwgRElTTkVZIEpVTklPUiBVUyBbSERdCmh0dHBzOi8vdjEudGhldHZhcHAudG8vaGxzL0Rpc25leUp1bmlvckVhc3QvaW5kZXgubTN1OD9jaGVja2VkYnk6RE40LUlQVFYKCiNFWFRJTkY6LTEgdHZnLWxvZ289Imh0dHBzOi8vY2RuLnByb2Qud2Vic2l0ZS1maWxlcy5jb20vNjY3ZjRhZjNmNGYzYTdhZjAxMDE2NjYxLzY3MWYxMTQzOGQ0Mjg3ODRlMTk2ZjA3NV9ESl9CX0Rpc25leV9PWShjeWFuLXllbGxvdykucG5nIiBncm91cC10aXRsZT0iRlJFRU1JVU0rIiwgRElTTkVZIEpVTklPUiBVUyAyIFtIRF0KaHR0cDovL2ZsMi5tb3Zlb25qb3kuY29tL0RJU05FWV9KUi9pbmRleC5tM3U4P2NoZWNrZWRieTpETjQtSVBUVgoKI0VYVElORjotMSB0dmctbG9nbz0iaHR0cHM6Ly91cGxvYWQud2lraW1lZGlhLm9yZy93aWtpcGVkaWEvY29tbW9ucy90aHVtYi9iL2I5L0Rpc25leV9YRF8tXzIwMTUuc3ZnLzEyMDBweC1EaXNuZXlfWERfLV8yMDE1LnN2Zy5wbmciIGdyb3VwLXRpdGxlPSJGUkVFTUlVTSsiLCBESVNORVkgWEQgW0hEXQpodHRwOi8vZmwyLm1vdmVvbmpveS5jb20vRElTTkVZX1hEL2luZGV4Lm0zdTg/Y2hlY2tlZGJ5OkRONC1JUFRWCgojRVhUSU5GOi0xIHR2Zy1sb2dvPSJodHRwczovL3VwbG9hZC53aWtpbWVkaWEub3JnL3dpa2lwZWRpYS9jb21tb25zL3RodW1iL2IvYjkvRGlzbmV5X1hEXy1fMjAxNS5zdmcvMTIwMHB4LURpc25leV9YRF8tXzIwMTUuc3ZnLnBuZyIgZ3JvdXAtdGl0bGU9IkZSRUVNSVVNKyIsIERJU05FWSBYRCAyIFtIRF0KaHR0cHM6Ly92MS50aGV0dmFwcC50by9obHMvRGlzbmV5WERFYXN0L2luZGV4Lm0zdTg/Y2hlY2tlZGJ5OkRONC1JUFRWCgojRVhUSU5GOi0xIHR2Zy1sb2dvPSJodHRwczovL3VwbG9hZC53aWtpbWVkaWEub3JnL3dpa2lwZWRpYS9jb21tb25zL3RodW1iLzcvN2EvTmlja2Vsb2Rlb25fMjAwOV9sb2dvLnN2Zy8xOTIwcHgtTmlja2Vsb2Rlb25fMjAwOV9sb2dvLnN2Zy5wbmciIGdyb3VwLXRpdGxlPSJGUkVFTUlVTSsiLCBOSUNLRUxPREVPTiBbSERdCmh0dHBzOi8vam1wMi51ay9wbHUtNjJiZGI2YTgzYzZlMzcwMDA3MjY4MjNiLm0zdTg/Y2hlY2tlZGJ5OkRONC1JUFRWCgojRVhUSU5GOi0xIHR2Zy1sb2dvPSJodHRwczovL3VwbG9hZC53aWtpbWVkaWEub3JnL3dpa2lwZWRpYS9jb21tb25zLzMvM2QvTmlja011c2ljX0xvZ28ucG5nIiBncm91cC10aXRsZT0iRlJFRU1JVU0rIiwgTklDSyBNVVNJQyBbU0RdCmh0dHA6Ly9mbDIubW92ZW9uam95LmNvbS9OSUNLX01VU0lDL2luZGV4Lm0zdTg/Y2hlY2tlZGJ5OkRONC1JUFRWCgojRVhUSU5GOi0xIHR2Zy1sb2dvPSJodHRwczovL3VwbG9hZC53aWtpbWVkaWEub3JnL3dpa2lwZWRpYS9jb21tb25zLzYvNmUvTmlja3Rvb25zLnBuZyIgZ3JvdXAtdGl0bGU9IkZSRUVNSVVNKyIsIE5JQ0tUT09OUyBbSERdCmh0dHA6Ly8xNDMuMjQ0LjYwLjMwL05JQ0tUT09OUy9pbmRleC5tM3U4P2NoZWNrZWRieTpETjQtSVBUVgoKI0VYVElORjotMSB0dmctbG9nbz0iaHR0cHM6Ly91cGxvYWQud2lraW1lZGlhLm9yZy93aWtpcGVkaWEvY29tbW9ucy82LzZlL05pY2t0b29ucy5wbmciIGdyb3VwLXRpdGxlPSJGUkVFTUlVTSsiLCBOSUNLVE9PTlMgMiBbSERdCmh0dHA6Ly9mbDEubW92ZW9uam95LmNvbS9OSUNLVE9PTlMvaW5kZXgubTN1OD9jaGVja2VkYnk6RE40LUlQVFYKCiNFWFRJTkY6LTEgdHZnLWxvZ289Imh0dHBzOi8vdXBsb2FkLndpa2ltZWRpYS5vcmcvd2lraXBlZGlhL2NvbW1vbnMvOS85Ny9Ub29uYW1pXzIwMjJfTG9nby5wbmciIGdyb3VwLXRpdGxlPSJGUkVFTUlVTSsiLCBUT09OQU1JIEFGVEVSTUFUSCBFQVNUIFtTRF0KaHR0cDovL2FwaS50b29uYW1pYWZ0ZXJtYXRoLmNvbTozMDAwL2VzdC9wbGF5bGlzdC5tM3U4P2NoZWNrZWRieTpETjQtSVBUVgoKI0VYVElORjotMSB0dmctbG9nbz0iaHR0cHM6Ly9sb2dvbG9vay5uZXQvd3AtY29udGVudC91cGxvYWRzLzIwMjMvMTAvQ3J1bmNoeXJvbGwtTG9nby5wbmciIGdyb3VwLXRpdGxlPSJGUkVFTUlVTSsiLCBDUlVOQ0hZUk9MTCBbSERdCmh0dHA6Ly9jZmQtdjQtc2VydmljZS1jaGFubmVsLXN0aXRjaGVyLXVzZTEtMS5wcmQucGx1dG8udHYvc3RpdGNoL2hscy9jaGFubmVsLzY1NjUyZjdmYzBmYzg4MDAwODgzNTM3YS9tYXN0ZXIubTN1OD9hcHBOYW1lPXdlYiZhcHBWZXJzaW9uPXVua25vd24mY2xpZW50VGltZT0wJmRldmljZUROVD0wJmRldmljZUlkPTZjMjgyZTI4LTMwZDMtMTFlZi05Y2Y1LWU5ZGRmZjhmZjQ5NiZkZXZpY2VNYWtlPUNocm9tZSZkZXZpY2VNb2RlbD13ZWImZGV2aWNlVHlwZT13ZWImZGV2aWNlVmVyc2lvbj11bmtub3duJmluY2x1ZGVFeHRlbmRlZEV2ZW50cz1mYWxzZSZzZXJ2ZXJTaWRlQWRzPWZhbHNlJnNpZD05NWRkYWJkNS0wOWMwLTQ2ODAtOTQxMi1lZWE0M2M0N2E0ZGEKCiNFWFRJTkY6LTEgdHZnLWxvZ289Imh0dHBzOi8vc3RhdGljLndpa2lhLm5vY29va2llLm5ldC9sb2dvcGVkaWEvaW1hZ2VzLzUvNTgvUGFyYW1vdW50X01vdmllX0NoYW5uZWwuc3ZnIiBncm91cC10aXRsZT0iRlJFRU1JVU0rIiwgUEFSQU1PVU5UIE1PVklFUyBVUyBbSERdCmh0dHBzOi8vc2VydmljZS1zdGl0Y2hlci5jbHVzdGVycy5wbHV0by50di9zdGl0Y2gvaGxzL2NoYW5uZWwvNWNiMGNhZTdhNDYxNDA2ZmZlM2Y1MjEzL21hc3Rlci5tM3U4P2FkdmVydGlzaW5nSWQ9JmFwcE5hbWU9d2ViJmFwcFN0b3JlVXJsPSZhcHBWZXJzaW9uPUROVCZhcHBfbmFtZT0mYXJjaGl0ZWN0dXJlPSZidWlsZFZlcnNpb249JmRldmljZUROVD0wJmRldmljZUlkPTVjYjBjYWU3YTQ2MTQwNmZmZTNmNTIxMyZkZXZpY2VMYXQ9JmRldmljZUxvbj0mZGV2aWNlTWFrZT13ZWImZGV2aWNlTW9kZWw9d2ViJmRldmljZVR5cGU9d2ViJmRldmljZVZlcnNpb249RE5UJmluY2x1ZGVFeHRlbmRlZEV2ZW50cz1mYWxzZSZtYXJrZXRpbmdSZWdpb249VVMmc2VydmVyU2lkZUFkcz1mYWxzZSZzaWQ9MTAwJnRlcm1pbmF0ZT1mYWxzZSZ1c2VySWQ9CgojRVhUSU5GOi0xIHR2Zy1sb2dvPSJodHRwczovL3VwbG9hZC53aWtpbWVkaWEub3JnL3dpa2lwZWRpYS9jb21tb25zL2EvYTQvUGFyYW1vdW50X05ldHdvcmtfd29yZG1hcmtfJTI4Qmx1ZSUyOS5wbmciIGdyb3VwLXRpdGxlPSJGUkVFTUlVTSsiLCBQQVJBTU9VTlQgTkVUV09SSyBVUyBbSERdCmh0dHA6Ly9mbDIubW92ZW9uam95LmNvbS9QQVJBTU9VTlRfTkVUV09SSy9pbmRleC5tM3U4P2NoZWNrZWRieTpETjQtSVBUVgoKI0VYVElORjotMSB0dmctbG9nbz0iaHR0cHM6Ly9wcmVtaXVtYmFuZ2xhZGVzaC5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjMvMTAvcGljdHVyZS5wbmciIGdyb3VwLXRpdGxlPSJGUkVFTUlVTSsiLCBSQUtVVEVOIFZJS0kgW0hEXQpodHRwczovL25ld2lkY28tcmFrdXRlbnZpa2ktMS11cy5yb2t1Lnd1cmwudHYvcGxheWxpc3QubTN1OD9jaGVja2VkYnk6RE40LUlQVFYKCiNFWFRJTkY6LTEgdHZnLWxvZ289IiBodHRwczovL2NvcmRjdXR0aW5nLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAxOC8wMy9zdGFyei1zdHJlYW1pbmctbG9nby5wbmciIGdyb3VwLXRpdGxlPSJGUkVFTUlVTSsiLCBTVEFSWiBVUyBbU0RdCmh0dHA6Ly9mbDIubW92ZW9uam95LmNvbS9TVEFSWl9XRVNUL2luZGV4Lm0zdTg/Y2hlY2tlZGJ5OkRONC1JUFRWCgojRVhUSU5GOi0xIHR2Zy1sb2dvPSJodHRwczovL3VwbG9hZC53aWtpbWVkaWEub3JnL3dpa2lwZWRpYS9jb21tb25zL2MvYzYvU1lGWV9Mb2dvXzIwMjAucG5nIiBncm91cC10aXRsZT0iRlJFRU1JVU0rIiwgU1lGWSBVUyBbSERdCmh0dHA6Ly9mbDIubW92ZW9uam95LmNvbS9TWUZZL2luZGV4Lm0zdTg/Y2hlY2tlZGJ5OkRONC1JUFRWCgo=